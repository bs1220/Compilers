Terminals unused in grammar

   ILLEGAL_TOK
   ERROR


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: decl
    3         | declList decl

    4 decl: varDecl
    5     | funDecl

    6 $@1: /* empty */

    7 varDecl: typeSpecifier ID LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN
    8        | typeSpecifier ID SEMICLN

    9 typeSpecifier: KWD_INT
   10              | KWD_CHAR
   11              | KWD_VOID
   12              | KWD_STRING

   13 $@2: /* empty */

   14 funDecl: typeSpecifier ID LPAREN $@2 formalDeclList RPAREN funBody

   15 $@3: /* empty */

   16 funDecl: typeSpecifier ID LPAREN RPAREN $@3 funBody

   17 formalDeclList: formalDecl
   18               | formalDecl COMMA formalDeclList

   19 formalDecl: typeSpecifier ID
   20           | typeSpecifier ID LSQ_BRKT RSQ_BRKT

   21 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   22 localDeclList: /* empty */
   23              | varDecl localDeclList

   24 statementList: /* empty */
   25              | statement statementList

   26 statement: compoundStmt
   27          | assignStmt
   28          | condStmt
   29          | loopStmt
   30          | returnStmt

   31 $@4: /* empty */

   32 $@5: /* empty */

   33 compoundStmt: LCRLY_BRKT $@4 statementList $@5 RCRLY_BRKT

   34 assignStmt: var OPER_ASGN expression SEMICLN
   35           | expression SEMICLN

   36 condStmt: KWD_IF LPAREN expression RPAREN statement
   37         | KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement

   38 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   39 returnStmt: KWD_RETURN SEMICLN
   40           | KWD_RETURN expression SEMICLN

   41 var: ID

   42 $@6: /* empty */

   43 var: ID LSQ_BRKT $@6 addExpr RSQ_BRKT

   44 expression: addExpr
   45           | expression relop addExpr

   46 relop: OPER_GTE
   47      | OPER_GT
   48      | OPER_LT
   49      | OPER_LTE
   50      | OPER_EQ
   51      | OPER_NEQ

   52 addExpr: term
   53        | addExpr addop term

   54 addop: OPER_ADD
   55      | OPER_SUB

   56 term: factor
   57     | term mulop factor

   58 mulop: OPER_MUL
   59      | OPER_DIV

   60 factor: LPAREN expression RPAREN
   61       | var
   62       | funcCallExpr
   63       | INTCONST
   64       | CHARCONST
   65       | STRCONST

   66 $@7: /* empty */

   67 funcCallExpr: ID LPAREN $@7 argList RPAREN
   68             | ID LPAREN RPAREN

   69 argList: expression
   70        | argList COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 14 16 19 20 41 43 67 68
INTCONST (259) 7 63
CHARCONST (260) 64
STRCONST (261) 65
KWD_IF (262) 36 37
KWD_ELSE (263) 37
KWD_WHILE (264) 38
KWD_INT (265) 9
KWD_STRING (266) 12
KWD_CHAR (267) 10
KWD_RETURN (268) 39 40
KWD_VOID (269) 11
OPER_ADD (270) 54
OPER_SUB (271) 55
OPER_MUL (272) 58
OPER_DIV (273) 59
OPER_LT (274) 48
OPER_GT (275) 47
OPER_GTE (276) 46
OPER_LTE (277) 49
OPER_EQ (278) 50
OPER_NEQ (279) 51
OPER_ASGN (280) 34
LSQ_BRKT (281) 7 20 43
RSQ_BRKT (282) 7 20 43
LCRLY_BRKT (283) 21 33
RCRLY_BRKT (284) 21 33
LPAREN (285) 14 16 36 37 38 60 67 68
RPAREN (286) 14 16 36 37 38 60 67 68
COMMA (287) 18 70
SEMICLN (288) 7 8 34 35 39 40
ILLEGAL_TOK (289)
ERROR (290)
XIF (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
declList (39)
    on left: 2 3, on right: 1 3
decl (40)
    on left: 4 5, on right: 2 3
varDecl (41)
    on left: 7 8, on right: 4 23
$@1 (42)
    on left: 6, on right: 7
typeSpecifier (43)
    on left: 9 10 11 12, on right: 7 8 14 16 19 20
funDecl (44)
    on left: 14 16, on right: 5
$@2 (45)
    on left: 13, on right: 14
$@3 (46)
    on left: 15, on right: 16
formalDeclList (47)
    on left: 17 18, on right: 14 18
formalDecl (48)
    on left: 19 20, on right: 17 18
funBody (49)
    on left: 21, on right: 14 16
localDeclList (50)
    on left: 22 23, on right: 21 23
statementList (51)
    on left: 24 25, on right: 21 25 33
statement (52)
    on left: 26 27 28 29 30, on right: 25 36 37 38
compoundStmt (53)
    on left: 33, on right: 26
$@4 (54)
    on left: 31, on right: 33
$@5 (55)
    on left: 32, on right: 33
assignStmt (56)
    on left: 34 35, on right: 27
condStmt (57)
    on left: 36 37, on right: 28
loopStmt (58)
    on left: 38, on right: 29
returnStmt (59)
    on left: 39 40, on right: 30
var (60)
    on left: 41 43, on right: 34 61
$@6 (61)
    on left: 42, on right: 43
expression (62)
    on left: 44 45, on right: 34 35 36 37 38 40 45 60 69 70
relop (63)
    on left: 46 47 48 49 50 51, on right: 45
addExpr (64)
    on left: 52 53, on right: 43 44 45 53
addop (65)
    on left: 54 55, on right: 53
term (66)
    on left: 56 57, on right: 52 53 57
mulop (67)
    on left: 58 59, on right: 57
factor (68)
    on left: 60 61 62 63 64 65, on right: 56 57
funcCallExpr (69)
    on left: 67 68, on right: 62
$@7 (70)
    on left: 66, on right: 67
argList (71)
    on left: 69 70, on right: 67 70


state 0

    0 $accept: . program $end

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    program        go to state 5
    declList       go to state 6
    decl           go to state 7
    varDecl        go to state 8
    typeSpecifier  go to state 9
    funDecl        go to state 10


state 1

    9 typeSpecifier: KWD_INT .

    $default  reduce using rule 9 (typeSpecifier)


state 2

   12 typeSpecifier: KWD_STRING .

    $default  reduce using rule 12 (typeSpecifier)


state 3

   10 typeSpecifier: KWD_CHAR .

    $default  reduce using rule 10 (typeSpecifier)


state 4

   11 typeSpecifier: KWD_VOID .

    $default  reduce using rule 11 (typeSpecifier)


state 5

    0 $accept: program . $end

    $end  shift, and go to state 11


state 6

    1 program: declList .
    3 declList: declList . decl

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl           go to state 12
    varDecl        go to state 8
    typeSpecifier  go to state 9
    funDecl        go to state 10


state 7

    2 declList: decl .

    $default  reduce using rule 2 (declList)


state 8

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


state 9

    7 varDecl: typeSpecifier . ID LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN
    8        | typeSpecifier . ID SEMICLN
   14 funDecl: typeSpecifier . ID LPAREN $@2 formalDeclList RPAREN funBody
   16        | typeSpecifier . ID LPAREN RPAREN $@3 funBody

    ID  shift, and go to state 13


state 10

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


state 11

    0 $accept: program $end .

    $default  accept


state 12

    3 declList: declList decl .

    $default  reduce using rule 3 (declList)


state 13

    7 varDecl: typeSpecifier ID . LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN
    8        | typeSpecifier ID . SEMICLN
   14 funDecl: typeSpecifier ID . LPAREN $@2 formalDeclList RPAREN funBody
   16        | typeSpecifier ID . LPAREN RPAREN $@3 funBody

    LSQ_BRKT  shift, and go to state 14
    LPAREN    shift, and go to state 15
    SEMICLN   shift, and go to state 16


state 14

    7 varDecl: typeSpecifier ID LSQ_BRKT . $@1 INTCONST RSQ_BRKT SEMICLN

    $default  reduce using rule 6 ($@1)

    $@1  go to state 17


state 15

   14 funDecl: typeSpecifier ID LPAREN . $@2 formalDeclList RPAREN funBody
   16        | typeSpecifier ID LPAREN . RPAREN $@3 funBody

    RPAREN  shift, and go to state 18

    $default  reduce using rule 13 ($@2)

    $@2  go to state 19


state 16

    8 varDecl: typeSpecifier ID SEMICLN .

    $default  reduce using rule 8 (varDecl)


state 17

    7 varDecl: typeSpecifier ID LSQ_BRKT $@1 . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 20


state 18

   16 funDecl: typeSpecifier ID LPAREN RPAREN . $@3 funBody

    $default  reduce using rule 15 ($@3)

    $@3  go to state 21


state 19

   14 funDecl: typeSpecifier ID LPAREN $@2 . formalDeclList RPAREN funBody

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    typeSpecifier   go to state 22
    formalDeclList  go to state 23
    formalDecl      go to state 24


state 20

    7 varDecl: typeSpecifier ID LSQ_BRKT $@1 INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 25


state 21

   16 funDecl: typeSpecifier ID LPAREN RPAREN $@3 . funBody

    LCRLY_BRKT  shift, and go to state 26

    funBody  go to state 27


state 22

   19 formalDecl: typeSpecifier . ID
   20           | typeSpecifier . ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 28


state 23

   14 funDecl: typeSpecifier ID LPAREN $@2 formalDeclList . RPAREN funBody

    RPAREN  shift, and go to state 29


state 24

   17 formalDeclList: formalDecl .
   18               | formalDecl . COMMA formalDeclList

    COMMA  shift, and go to state 30

    $default  reduce using rule 17 (formalDeclList)


state 25

    7 varDecl: typeSpecifier ID LSQ_BRKT $@1 INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 31


state 26

   21 funBody: LCRLY_BRKT . localDeclList statementList RCRLY_BRKT

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 22 (localDeclList)

    varDecl        go to state 32
    typeSpecifier  go to state 33
    localDeclList  go to state 34


state 27

   16 funDecl: typeSpecifier ID LPAREN RPAREN $@3 funBody .

    $default  reduce using rule 16 (funDecl)


state 28

   19 formalDecl: typeSpecifier ID .
   20           | typeSpecifier ID . LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 35

    $default  reduce using rule 19 (formalDecl)


state 29

   14 funDecl: typeSpecifier ID LPAREN $@2 formalDeclList RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 26

    funBody  go to state 36


state 30

   18 formalDeclList: formalDecl COMMA . formalDeclList

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    typeSpecifier   go to state 22
    formalDeclList  go to state 37
    formalDecl      go to state 24


state 31

    7 varDecl: typeSpecifier ID LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 7 (varDecl)


state 32

   23 localDeclList: varDecl . localDeclList

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 22 (localDeclList)

    varDecl        go to state 32
    typeSpecifier  go to state 33
    localDeclList  go to state 38


state 33

    7 varDecl: typeSpecifier . ID LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN
    8        | typeSpecifier . ID SEMICLN

    ID  shift, and go to state 39


state 34

   21 funBody: LCRLY_BRKT localDeclList . statementList RCRLY_BRKT

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 24 (statementList)

    statementList  go to state 49
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    var            go to state 56
    expression     go to state 57
    addExpr        go to state 58
    term           go to state 59
    factor         go to state 60
    funcCallExpr   go to state 61


state 35

   20 formalDecl: typeSpecifier ID LSQ_BRKT . RSQ_BRKT

    RSQ_BRKT  shift, and go to state 62


state 36

   14 funDecl: typeSpecifier ID LPAREN $@2 formalDeclList RPAREN funBody .

    $default  reduce using rule 14 (funDecl)


state 37

   18 formalDeclList: formalDecl COMMA formalDeclList .

    $default  reduce using rule 18 (formalDeclList)


state 38

   23 localDeclList: varDecl localDeclList .

    $default  reduce using rule 23 (localDeclList)


state 39

    7 varDecl: typeSpecifier ID . LSQ_BRKT $@1 INTCONST RSQ_BRKT SEMICLN
    8        | typeSpecifier ID . SEMICLN

    LSQ_BRKT  shift, and go to state 14
    SEMICLN   shift, and go to state 16


state 40

   41 var: ID .
   43    | ID . LSQ_BRKT $@6 addExpr RSQ_BRKT
   67 funcCallExpr: ID . LPAREN $@7 argList RPAREN
   68             | ID . LPAREN RPAREN

    LSQ_BRKT  shift, and go to state 63
    LPAREN    shift, and go to state 64

    $default  reduce using rule 41 (var)


state 41

   63 factor: INTCONST .

    $default  reduce using rule 63 (factor)


state 42

   64 factor: CHARCONST .

    $default  reduce using rule 64 (factor)


state 43

   65 factor: STRCONST .

    $default  reduce using rule 65 (factor)


state 44

   36 condStmt: KWD_IF . LPAREN expression RPAREN statement
   37         | KWD_IF . LPAREN expression RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 65


state 45

   38 loopStmt: KWD_WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 66


state 46

   39 returnStmt: KWD_RETURN . SEMICLN
   40           | KWD_RETURN . expression SEMICLN

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48
    SEMICLN    shift, and go to state 67

    var           go to state 68
    expression    go to state 69
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 47

   33 compoundStmt: LCRLY_BRKT . $@4 statementList $@5 RCRLY_BRKT

    $default  reduce using rule 31 ($@4)

    $@4  go to state 70


state 48

   60 factor: LPAREN . expression RPAREN

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 71
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 49

   21 funBody: LCRLY_BRKT localDeclList statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 72


state 50

   25 statementList: statement . statementList

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 24 (statementList)

    statementList  go to state 73
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    var            go to state 56
    expression     go to state 57
    addExpr        go to state 58
    term           go to state 59
    factor         go to state 60
    funcCallExpr   go to state 61


state 51

   26 statement: compoundStmt .

    $default  reduce using rule 26 (statement)


state 52

   27 statement: assignStmt .

    $default  reduce using rule 27 (statement)


state 53

   28 statement: condStmt .

    $default  reduce using rule 28 (statement)


state 54

   29 statement: loopStmt .

    $default  reduce using rule 29 (statement)


state 55

   30 statement: returnStmt .

    $default  reduce using rule 30 (statement)


state 56

   34 assignStmt: var . OPER_ASGN expression SEMICLN
   61 factor: var .

    OPER_ASGN  shift, and go to state 74

    $default  reduce using rule 61 (factor)


state 57

   35 assignStmt: expression . SEMICLN
   45 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    SEMICLN   shift, and go to state 81

    relop  go to state 82


state 58

   44 expression: addExpr .
   53 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 83
    OPER_SUB  shift, and go to state 84

    $default  reduce using rule 44 (expression)

    addop  go to state 85


state 59

   52 addExpr: term .
   57 term: term . mulop factor

    OPER_MUL  shift, and go to state 86
    OPER_DIV  shift, and go to state 87

    $default  reduce using rule 52 (addExpr)

    mulop  go to state 88


state 60

   56 term: factor .

    $default  reduce using rule 56 (term)


state 61

   62 factor: funcCallExpr .

    $default  reduce using rule 62 (factor)


state 62

   20 formalDecl: typeSpecifier ID LSQ_BRKT RSQ_BRKT .

    $default  reduce using rule 20 (formalDecl)


state 63

   43 var: ID LSQ_BRKT . $@6 addExpr RSQ_BRKT

    $default  reduce using rule 42 ($@6)

    $@6  go to state 89


state 64

   67 funcCallExpr: ID LPAREN . $@7 argList RPAREN
   68             | ID LPAREN . RPAREN

    RPAREN  shift, and go to state 90

    $default  reduce using rule 66 ($@7)

    $@7  go to state 91


state 65

   36 condStmt: KWD_IF LPAREN . expression RPAREN statement
   37         | KWD_IF LPAREN . expression RPAREN statement KWD_ELSE statement

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 92
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 66

   38 loopStmt: KWD_WHILE LPAREN . expression RPAREN statement

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 93
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 67

   39 returnStmt: KWD_RETURN SEMICLN .

    $default  reduce using rule 39 (returnStmt)


state 68

   61 factor: var .

    $default  reduce using rule 61 (factor)


state 69

   40 returnStmt: KWD_RETURN expression . SEMICLN
   45 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    SEMICLN   shift, and go to state 94

    relop  go to state 82


state 70

   33 compoundStmt: LCRLY_BRKT $@4 . statementList $@5 RCRLY_BRKT

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 24 (statementList)

    statementList  go to state 95
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    var            go to state 56
    expression     go to state 57
    addExpr        go to state 58
    term           go to state 59
    factor         go to state 60
    funcCallExpr   go to state 61


state 71

   45 expression: expression . relop addExpr
   60 factor: LPAREN expression . RPAREN

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    RPAREN    shift, and go to state 96

    relop  go to state 82


state 72

   21 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT .

    $default  reduce using rule 21 (funBody)


state 73

   25 statementList: statement statementList .

    $default  reduce using rule 25 (statementList)


state 74

   34 assignStmt: var OPER_ASGN . expression SEMICLN

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 97
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 75

   48 relop: OPER_LT .

    $default  reduce using rule 48 (relop)


state 76

   47 relop: OPER_GT .

    $default  reduce using rule 47 (relop)


state 77

   46 relop: OPER_GTE .

    $default  reduce using rule 46 (relop)


state 78

   49 relop: OPER_LTE .

    $default  reduce using rule 49 (relop)


state 79

   50 relop: OPER_EQ .

    $default  reduce using rule 50 (relop)


state 80

   51 relop: OPER_NEQ .

    $default  reduce using rule 51 (relop)


state 81

   35 assignStmt: expression SEMICLN .

    $default  reduce using rule 35 (assignStmt)


state 82

   45 expression: expression relop . addExpr

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    addExpr       go to state 98
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 83

   54 addop: OPER_ADD .

    $default  reduce using rule 54 (addop)


state 84

   55 addop: OPER_SUB .

    $default  reduce using rule 55 (addop)


state 85

   53 addExpr: addExpr addop . term

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    term          go to state 99
    factor        go to state 60
    funcCallExpr  go to state 61


state 86

   58 mulop: OPER_MUL .

    $default  reduce using rule 58 (mulop)


state 87

   59 mulop: OPER_DIV .

    $default  reduce using rule 59 (mulop)


state 88

   57 term: term mulop . factor

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    factor        go to state 100
    funcCallExpr  go to state 61


state 89

   43 var: ID LSQ_BRKT $@6 . addExpr RSQ_BRKT

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    addExpr       go to state 101
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 90

   68 funcCallExpr: ID LPAREN RPAREN .

    $default  reduce using rule 68 (funcCallExpr)


state 91

   67 funcCallExpr: ID LPAREN $@7 . argList RPAREN

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 102
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61
    argList       go to state 103


state 92

   36 condStmt: KWD_IF LPAREN expression . RPAREN statement
   37         | KWD_IF LPAREN expression . RPAREN statement KWD_ELSE statement
   45 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    RPAREN    shift, and go to state 104

    relop  go to state 82


state 93

   38 loopStmt: KWD_WHILE LPAREN expression . RPAREN statement
   45 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    RPAREN    shift, and go to state 105

    relop  go to state 82


state 94

   40 returnStmt: KWD_RETURN expression SEMICLN .

    $default  reduce using rule 40 (returnStmt)


state 95

   33 compoundStmt: LCRLY_BRKT $@4 statementList . $@5 RCRLY_BRKT

    $default  reduce using rule 32 ($@5)

    $@5  go to state 106


state 96

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


state 97

   34 assignStmt: var OPER_ASGN expression . SEMICLN
   45 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80
    SEMICLN   shift, and go to state 107

    relop  go to state 82


state 98

   45 expression: expression relop addExpr .
   53 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 83
    OPER_SUB  shift, and go to state 84

    $default  reduce using rule 45 (expression)

    addop  go to state 85


state 99

   53 addExpr: addExpr addop term .
   57 term: term . mulop factor

    OPER_MUL  shift, and go to state 86
    OPER_DIV  shift, and go to state 87

    $default  reduce using rule 53 (addExpr)

    mulop  go to state 88


state 100

   57 term: term mulop factor .

    $default  reduce using rule 57 (term)


state 101

   43 var: ID LSQ_BRKT $@6 addExpr . RSQ_BRKT
   53 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 83
    OPER_SUB  shift, and go to state 84
    RSQ_BRKT  shift, and go to state 108

    addop  go to state 85


state 102

   45 expression: expression . relop addExpr
   69 argList: expression .

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80

    $default  reduce using rule 69 (argList)

    relop  go to state 82


state 103

   67 funcCallExpr: ID LPAREN $@7 argList . RPAREN
   70 argList: argList . COMMA expression

    RPAREN  shift, and go to state 109
    COMMA   shift, and go to state 110


state 104

   36 condStmt: KWD_IF LPAREN expression RPAREN . statement
   37         | KWD_IF LPAREN expression RPAREN . statement KWD_ELSE statement

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 111
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    var           go to state 56
    expression    go to state 57
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 105

   38 loopStmt: KWD_WHILE LPAREN expression RPAREN . statement

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 112
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    var           go to state 56
    expression    go to state 57
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 106

   33 compoundStmt: LCRLY_BRKT $@4 statementList $@5 . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 113


state 107

   34 assignStmt: var OPER_ASGN expression SEMICLN .

    $default  reduce using rule 34 (assignStmt)


state 108

   43 var: ID LSQ_BRKT $@6 addExpr RSQ_BRKT .

    $default  reduce using rule 43 (var)


state 109

   67 funcCallExpr: ID LPAREN $@7 argList RPAREN .

    $default  reduce using rule 67 (funcCallExpr)


state 110

   70 argList: argList COMMA . expression

    ID         shift, and go to state 40
    INTCONST   shift, and go to state 41
    CHARCONST  shift, and go to state 42
    STRCONST   shift, and go to state 43
    LPAREN     shift, and go to state 48

    var           go to state 68
    expression    go to state 114
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 111

   36 condStmt: KWD_IF LPAREN expression RPAREN statement .
   37         | KWD_IF LPAREN expression RPAREN statement . KWD_ELSE statement

    KWD_ELSE  shift, and go to state 115

    $default  reduce using rule 36 (condStmt)


state 112

   38 loopStmt: KWD_WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 38 (loopStmt)


state 113

   33 compoundStmt: LCRLY_BRKT $@4 statementList $@5 RCRLY_BRKT .

    $default  reduce using rule 33 (compoundStmt)


state 114

   45 expression: expression . relop addExpr
   70 argList: argList COMMA expression .

    OPER_LT   shift, and go to state 75
    OPER_GT   shift, and go to state 76
    OPER_GTE  shift, and go to state 77
    OPER_LTE  shift, and go to state 78
    OPER_EQ   shift, and go to state 79
    OPER_NEQ  shift, and go to state 80

    $default  reduce using rule 70 (argList)

    relop  go to state 82


state 115

   37 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE . statement

    ID          shift, and go to state 40
    INTCONST    shift, and go to state 41
    CHARCONST   shift, and go to state 42
    STRCONST    shift, and go to state 43
    KWD_IF      shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_RETURN  shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 116
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    var           go to state 56
    expression    go to state 57
    addExpr       go to state 58
    term          go to state 59
    factor        go to state 60
    funcCallExpr  go to state 61


state 116

   37 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement .

    $default  reduce using rule 37 (condStmt)
